#!/usr/bin/env python

import gi
gi.require_version('Gtk', '3.0')

from gi.repository import Gtk, Gdk
from Xlib import display
from Xlib.ext import randr
import argparse
from subprocess import check_output
from subprocess import Popen
import time


class MainWindow(Gtk.Window):
  def __init__(self, posy):
    Gtk.Window.__init__(self)
    self.posy = posy
    self.vol = int(check_output("pamixer --get-volume", shell=True))
    try:
      Popen("pamixer --get-mute", shell=True)
    except subprocess.CalledProcessError:
      self.muted = True
    else:
      self.muted = False

    self.set_resizable(False)
    self.set_decorated(False)
    self.set_border_width(10)
    self.type = Gtk.WindowType.POPUP
    self.set_type_hint(Gdk.WindowTypeHint.SPLASHSCREEN)

    box = Gtk.VBox()
    self.add(box)

    vol_adj = Gtk.Adjustment(
      value=self.vol, lower=0, upper=100, step_increment=5)
    vol = Gtk.VScale(adjustment=vol_adj, inverted=True, digits=0)
    vol.set_size_request(-1, 320)
    vol.connect('value-changed', self.volume_changed)
    box.add(vol)

    micbutton = Gtk.ToggleButton(
      label='ô€Š£',
      active=self.muted
    )
    box.add(micbutton)
    micbutton.connect('toggled', self.toggle_mute)

    self.active = True
    self.connect('notify::is-active', self.is_focused)
    self.allocated = False
    self.connect('size-allocate', self.is_allocated)

  def is_focused(self, *_):
    if self.active:
      self.active = not self.active
      return
    Gtk.main_quit()

  def is_allocated(self, *_):
    if self.allocated:
      return

    scr_width = Gdk.Display.get_default().get_monitor(0).get_workarea().width
    win_width = self.get_allocated_size()[0].width
    xpos = mousepos()[0]
    if (xpos + win_width) > scr_width:
      xpos = xpos - ((xpos + win_width) % scr_width) - 2
    else:
      xpos = xpos - win_width / 2 - 8

    self.move(xpos, self.posy)
    self.allocated = not self.allocated

  def volume_changed(self, scale):
    Popen("pamixer --set-volume {}; canberra-gtk-play -i audio-volume-change".format(
      int(scale.get_value())), shell=True)

  def toggle_mute(self, button):
    Popen("pamixer -t", shell=True)


def mousepos():
  data = display.Display().screen().root.query_pointer()._data
  return data["root_x"], data["root_y"]


parser = argparse.ArgumentParser(
  description='Simple popup volume control. Requires pamixer to work.')
parser.add_argument('-y', '--posy',
  type=int,
  required=True,
  help='vertical window placement')
args = parser.parse_args()

win = MainWindow(posy=args.posy)
win.show_all()
Gtk.main()
